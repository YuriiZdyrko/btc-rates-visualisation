stages:
  - compile
  - test
  - build
  - deploy
  - notify

variables:
  POSTGRES_HOST: postgres
  POSTGRES_DB: rates_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""

.elixir: &elixir
  image: elixir
  before_script:
    - elixir --version
    - mix --version
    - mix do local.hex --force, local.rebar --force
    - mix deps.get
    - mix deps.clean --unused

# TASKS
compile:elixir:
  <<: *elixir
  stage: compile
  script:
    - mix compile --warnings-as-errors

compile:plt:
  <<: *elixir
  stage: compile
  script:
    - mix dialyzer --plt

## Lint
lint:elixir:
  <<: *elixir
  stage: compile
  script:
    - mix format --check-formatted

## Test
test:exunit:
  <<: *elixir
  stage: test
  services:
    - postgres:9.6
  script:
    - mix test --cover --color
  artifacts:
    paths:
      - cover/
    expire_in: '1 month'

test:credo:
  <<: *elixir
  stage: test
  script:
    - mix credo

test:dialyxir:
  <<: *elixir
  stage: test
  script:
    - mix dialyzer
  allow_failure: true

build:
  image: docker:git
  variables:
    DOCKER_DRIVER: overlay_fs
  stage: build
  before_script:
    - docker version
  script:
    - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
    - docker build --pull -t "banzay/rates" .
    - docker push banzay/rates:latest
    - docker image save -o rates-release.tar "banzay/rates"
  only:
    - master
  artifacts:
    paths:
      - rates-release.tar
    expire_in: '1 month'
